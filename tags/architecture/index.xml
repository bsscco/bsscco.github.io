<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>architecture on ANDROID DEVELOPER BSSCCO</title>
    <link>/tags/architecture/</link>
    <description>Recent content in architecture on ANDROID DEVELOPER BSSCCO</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Booseol Shin</copyright>
    <lastBuildDate>Fri, 08 Jul 2022 22:00:01 +0000</lastBuildDate><atom:link href="/tags/architecture/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MAD Skills 앱 아키텍쳐 - Domain 레이어</title>
      <link>/posts/2022-07-08-mad-skills-domain-layer/</link>
      <pubDate>Fri, 08 Jul 2022 22:00:01 +0000</pubDate>
      
      <guid>/posts/2022-07-08-mad-skills-domain-layer/</guid>
      <description>Architecture: The domain layer - MAD Skills (영상, 문서) 💡개념이 헷갈리거나 제가 잘 모르거나 많은 사람들이 잘 모를 것 같은 것 위주로 정리
앱 아키텍쳐의 레이어드 구조 UI Layer Domain Layer Data Layer Domain 레이어의 역할 복잡한 비즈니스 로직이나 여러 ViewModel에서 재사용되는 비즈니스 로직의 캡슐화를 담당한다.
하나의 기능 당 하나의 UseCase로 구현한다.
UseCase UseCase의 이점 여러 ViewModel에서 UseCase를 재사용 하므로 코드중복을 방지한다. 도메인 로직만 분리했기 때문에 테스트 가능성을 높인다. UseCase당 하나의 기능만 담당시켜 SRP를 만족시킨다.</description>
    </item>
    
    <item>
      <title>MAD Skills 앱 아키텍쳐 - Data 레이어</title>
      <link>/posts/2022-07-08-mad-skills-data-layer/</link>
      <pubDate>Fri, 08 Jul 2022 22:00:00 +0000</pubDate>
      
      <guid>/posts/2022-07-08-mad-skills-data-layer/</guid>
      <description>Architecture: The data layer - MAD Skills (영상, 문서) 💡개념이 헷갈리거나 제가 잘 모르거나 많은 사람들이 잘 모를 것 같은 것 위주로 정리
앱 아키텍쳐의 레이어드 구조 UI Layer Domain Layer Data Layer Repositories RemoteDataSources LocalDataSources Data 레이어의 Source of truth Data 레이어에 Source of truth를 적용하려면 여러 데이터공급처(RemoteDataSource, LocalDataSource)가 있더라도 오직 한 곳으로부터 데이터를 공급받을 수 있도록 만들어주어야 한다.
Repository 데이터 접근 위치를 한 곳으로 모아준다. 데이터의 변화 시 DataSource들의 동작을 신경 쓸 필요 없이 관심사를 한 곳으로 모아준다.</description>
    </item>
    
  </channel>
</rss>
